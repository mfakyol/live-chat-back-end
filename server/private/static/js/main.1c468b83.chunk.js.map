{"version":3,"sources":["components/views/messageboard/inputfield/emojies/emojis.module.css","components/common/LaodingSpinner/style.module.css","components/views/sidebar/sidebar.module.css","components/views/profile/my-profile.module.css","components/views/profile/profile.module.css","components/common/FetchingSpinner/style.module.css","helpers/sound/message-sound.ogg","components/views/chatHome/chat-home.module.css","components/views/messageboard/imagemessage/image-message.module.css","components/views/messageboard/inputfield/Images/image-container.module.css","socket.js","redux/reducers/chatsReducer.js","redux/reducers/isChatsLoadingReducer.js","redux/reducers/imagesReducer.js","redux/reducers/isMessagesLoadingReducer.js","redux/reducers/isFetchingMoreReducer.js","redux/reducers/messagesReducer.js","components/views/messageboard/inputfield/emojies/Emojis.js","components/views/messageboard/inputfield/InputField.js","config.js","components/views/profile/Profile.js","components/views/messageboard/textmessage/TextMessage.js","components/views/messageboard/inputfield/Images/ImageContainer.js","components/views/messageboard/imagemessage/ImageMessage.js","components/common/LaodingSpinner/LoadingSpinner.js","components/common/FetchingSpinner/FetchingSpinner.js","components/views/messageboard/MessageBoard.js","redux/reducers/unreadsReducer.js","redux/reducers/notificationsReducer.js","redux/reducers/soundReducer.js","components/layouts/Main.js","redux/reducers/userReducer.js","components/views/profile/MyProfile.js","components/views/header/Header.js","components/views/sidebar/ChatListItem.js","components/views/sidebar/Sidebar.js","components/views/chatHome/ChatHome.js","router/index.js","components/App.js","redux/reducers/rootReducer.js","redux/reducers/exampleReducer.js","redux/store.js","index.js","components/views/messageboard/message-board.module.css","components/views/messageboard/textmessage/text-message.module.css","components/views/header/header.module.css","components/views/messageboard/inputfield/input-field.module.css"],"names":["module","exports","token","JSON","parse","localStorage","getItem","socket","io","query","pushChat","data","dispatch","type","payload","updateChatLastDate","chatId","date","sortChats","chats","sort","a","b","lastDate","getChats","emit","err","status","pushImages","updateIsMessagesLoading","updateIsFetchingMore","pushMessage","Emojis","props","state","recently","Object","keys","Date","prevProps","isOpen","this","setState","e","target","localName","onClickHandle","innerText","console","log","onClick","bind","style","display","className","classes","emojis","map","emoji","key","role","aria-labelledby","all","Component","InputField","emojisIsOpen","content","window","addEventListener","setItem","stringify","document","getElementById","click","images","Array","from","files","file","URL","createObjectURL","onPushImages","value","name","prevState","now","onPushMessage","onUpdateChatLastDate","trim","messageData","message","sentDate","querySelector","focus","openFileDialog","id","onChange","selectImages","onFocus","scrollToBottom","accept","multiple","onChangeHandle","input","placeholder","toggleEmojiContainer","addEmojiToMessage","sendMessage","connect","Profile","toggleProfile","user","background","src","config","profileImage","alt","info","fullName","description","TextMessage","delete","preventDefault","confirm","_id","m","isLeft","onContextMenu","seenIcon","isSeen","time","toLocaleString","slice","nextProps","ImageContainer","title","newImages","onClearImages","index","onRemoveImage","Promise","imageLink","fetch","then","res","blob","push","image","replace","catch","length","close","removeImage","openNewImageInput","addNewImages","autoFocus","autoComplete","sendImages","ImageMessage","open","children","openImage","LoadingSpinner","spinner","useRef","current","opacity","setTimeout","ref","isFetchingMore","MessageBoard","isOnline","profileIsOpen","isFetching","canFetchMore","oldScrollheight","messagesEnd","scrollIntoView","messageboard","React","createRef","scrollTop","messages","scrollHeight","match","params","onGetOldMessages","on","onSetMessageSeen","sendLastSeenDate","onGetLastMessages","onResetUnread","nextState","onClearMessages","undefined","isMessagesLoading","userData","filter","chat","main","username","to","getDate","month","newDay","senderId","getYear","getMonth","getDay","Fragment","float","clear","el","resetUnread","getLastMessages","getOldMessages","sortNotifications","notifications","updateSound","audio","Audio","sound","Main","path","history","jwt","decode","apiKey","removeItem","location","onGetSoundIsOpen","ongetUser","onGetChats","onGetNotifications","newMessage","soundIsOpen","pause","currentTime","play","onPushUnred","unRead","pushUnread","withRouter","MyProfile","toString","isDescriptionEdit","newImage","toggleMyProfile","onUpdateProfileImage","onImageInputChange","edit","editDescription","saveDescription","Header","myProfile","notificationsIsOpen","accountMenuIsOpen","notification","onPushNotification","onSetNotificationSeen","requestId","answer","onPushChat","onRemoveNotification","inp","createElement","body","appendChild","select","execCommand","remove","onUpdateSound","disconnect","header","brand","toggleNotification","nt","sender","answerRequest","reciever","toLocaleDateString","toLocaleTimeString","hour","minute","account","toggleAccountMenu","email","copyUserId","shortId","toggleSound","readOnly","checked","logOut","pushNotification","notificationId","removeNotification","ChatListItem","onGetUnreads","unReads","closeSidebar","activeClassName","updateUnreads","getUnreads","Sidebar","isMobile","isAddChatOpen","searchInput","connectionStatus","innerWidth","onpushChat","sidebar","transform","userId","isChatsLoading","toggleAddChat","toLowerCase","includes","toLocaleLowerCase","closeSidebarEvent","search","addUser","ChatHome","exact","render","component","App","combineReducers","example","action","seenDate","updated","newNotifications","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","StrictMode"],"mappings":"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C,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,kBAAgB,SAA3D,gBAGA,0BAAMP,UAAWC,IAAQG,MAAOE,KAAK,MAAMC,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","file":"static/js/main.1c468b83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"emojis\":\"emojis_emojis__2r2co\",\"recently\":\"emojis_recently__39Z9F\",\"all\":\"emojis_all__OHWrN\",\"emoji\":\"emojis_emoji__1w0Lp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner-wrapper\":\"style_spinner-wrapper__2DZ_b\",\"spinner\":\"style_spinner__3N79A\",\"mymove\":\"style_mymove__3FIib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"sidebar_background__32xmP\",\"sidebar\":\"sidebar_sidebar__1IdZz\",\"sidebar-header\":\"sidebar_sidebar-header__2Hdsn\",\"err\":\"sidebar_err__2coUY\",\"toggle-bar\":\"sidebar_toggle-bar__3-AZC\",\"connection-error\":\"sidebar_connection-error__1iqpB\",\"filter-input\":\"sidebar_filter-input__ttHms\",\"chats\":\"sidebar_chats__3BBvu\",\"chat\":\"sidebar_chat__1mGAG\",\"username\":\"sidebar_username__2i6xO\",\"active\":\"sidebar_active__2UgRO\",\"add-chat-container\":\"sidebar_add-chat-container__31mUV\",\"search-user-input\":\"sidebar_search-user-input__2jBGI\",\"search-user-button\":\"sidebar_search-user-button__1NtTr\",\"search-result\":\"sidebar_search-result__2p_Df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"my-profile_background__1viw3\",\"profile-container\":\"my-profile_profile-container__TkJ0m\",\"hr\":\"my-profile_hr__2uqeG\",\"close-icon\":\"my-profile_close-icon__8gt0v\",\"user-image-container\":\"my-profile_user-image-container__2gdC7\",\"user-image\":\"my-profile_user-image__BTxQ5\",\"info-container\":\"my-profile_info-container__2swHY\",\"info\":\"my-profile_info__3yqnZ\",\"fullname\":\"my-profile_fullname__2XoPT\",\"edit\":\"my-profile_edit__2ruf5\",\"description\":\"my-profile_description__3Xk0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"profile_background__20X5t\",\"profile-container\":\"profile_profile-container__TjZHh\",\"close-icon\":\"profile_close-icon__1OfjN\",\"user-image-container\":\"profile_user-image-container__31XXh\",\"user-image\":\"profile_user-image__2GRbw\",\"hr\":\"profile_hr__ILviy\",\"info-container\":\"profile_info-container__36QS7\",\"info\":\"profile_info__1JmXJ\",\"fullname\":\"profile_fullname__1m47i\",\"description\":\"profile_description__33UJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fetching-spinner-wrapper\":\"style_fetching-spinner-wrapper__DL8ZM\",\"mymove\":\"style_mymove__1ME00\"};","module.exports = __webpack_public_path__ + \"static/media/message-sound.34b40fda.ogg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-home\":\"chat-home_chat-home__Nd0uN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-message\":\"image-message_image-message__1MCzH\",\"title\":\"image-message_title__3luWD\",\"images\":\"image-message_images__MHnE5\",\"image-message-left\":\"image-message_image-message-left__2L0Md\",\"image-message-right\":\"image-message_image-message-right__3w6Je\",\"image-container\":\"image-message_image-container__O5bnJ\",\"image\":\"image-message_image__ozEoD\",\"small-image-container\":\"image-message_small-image-container__25K2F\",\"small-image\":\"image-message_small-image__3lKj1\",\"info\":\"image-message_info__307L0\",\"seen-icon\":\"image-message_seen-icon__2MlGi\",\"seenIcon\":\"image-message_seenIcon__2mt1h\",\"time\":\"image-message_time__2nNEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"image-container_background__1jQSH\",\"container\":\"image-container_container__1Cj5x\",\"images\":\"image-container_images__EQJT7\",\"image-container\":\"image-container_image-container__a01A3\",\"new-image-container\":\"image-container_new-image-container__2y7UI\",\"delete-container\":\"image-container_delete-container__2U_z-\",\"send-image-container\":\"image-container_send-image-container__2FZ_Z\",\"title\":\"image-container_title__3ANlO\",\"send-images-button\":\"image-container_send-images-button__skCf7\"};","import io from \"socket.io-client\";\r\nlet token = JSON.parse(localStorage.getItem(\"token\"));\r\nconst SERVER = \"http://localhost:3001\";\r\n// const SERVER = \"http://192.168.1.5:3001\";\r\nlet socket = io(SERVER, {query: {token}});\r\nexport default socket;","import socket from \"../../socket\";\r\nimport {updateIsChatLoading} from './isChatsLoadingReducer'\r\n\r\n//ActionTypes\r\nconst UPDATE_CHAT_LAST_DATE = \"UPDATE_CHAT_LAST_DATE\";\r\nconst UPDATE_CHATS = \"UPDATE_CHATS\";\r\nconst PUSH_CHAT = \"PUSH_CHAT\";\r\n\r\n//Reducer\r\nexport default function chatsReducer(state = [], { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_CHATS:\r\n      return payload.data;\r\n    case PUSH_CHAT:\r\n      return [...sortChats([...state, payload.data])]\r\n    case UPDATE_CHAT_LAST_DATE:\r\n      return [\r\n        ...sortChats(\r\n          state.map((chat) => {\r\n            if (chat._id === payload.chatId) {\r\n              chat.lastDate = payload.date;\r\n            }\r\n            return chat;\r\n          })\r\n        ),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Actions\r\nexport function updateChats(data) {\r\n  sortChats(data);\r\n  return {\r\n    type: UPDATE_CHATS,\r\n    payload: {\r\n      data: sortChats(data),\r\n    },\r\n  };\r\n}\r\nexport function pushChat(data) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PUSH_CHAT,\r\n      payload: {\r\n        data\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function updateChatLastDate(chatId, date) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_CHAT_LAST_DATE,\r\n      payload: {\r\n        chatId,\r\n        date,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nfunction sortChats(chats) {\r\n  return chats.sort((a, b) => {\r\n    if (a.lastDate > b.lastDate) {\r\n      return -1;\r\n    } else if (a.lastDate < b.lastDate) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n}\r\n\r\nexport function getChats() {\r\n  return (dispatch) => {\r\n    socket.emit(\"getChats\", function (err, chats) {\r\n      dispatch(updateChats(chats));\r\n      dispatch(updateIsChatLoading(false))\r\n    });\r\n  };\r\n}\r\n","//ActionTypes\r\nconst UPDATE_IS_CHAT_LOADING = 'UPDATE_IS_CHAT_LOADING';\r\n\r\n\r\n//Reducer\r\nexport default function isChatLoadingReducer(state = true, {type, payload}) {\r\n  switch (type) {\r\n    case UPDATE_IS_CHAT_LOADING:\r\n      return payload.status;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n//Actions\r\nexport function updateIsChatLoading(status) {\r\n  return {\r\n    type: UPDATE_IS_CHAT_LOADING,\r\n    payload: {\r\n      status,\r\n    },\r\n  };\r\n}\r\n","//ActionTypes\r\n\r\nconst CLEAR_IMAGES = \"CLEAR_IMAGES\";\r\nconst PUSH_IMAGES = \"PUSH_IMAGES\";\r\nconst REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\n//Reducer\r\nexport default function imagesReducer(state = [], { type, payload }) {\r\n  switch (type) {\r\n    case PUSH_IMAGES:\r\n      return [...state, ...payload.data];\r\n\r\n    case REMOVE_IMAGE:\r\n      return [\r\n        ...state.filter((image, index) => {\r\n          return index !== payload.data;\r\n        }),\r\n      ];\r\n    case CLEAR_IMAGES:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Actions\r\n\r\nexport function pushImages(data) {\r\n  return {\r\n    type: PUSH_IMAGES,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\nexport function removeImage(data) {\r\n  return {\r\n    type: REMOVE_IMAGE,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\nexport function clearImages() {\r\n  return {\r\n    type: CLEAR_IMAGES,\r\n    payload: {},\r\n  };\r\n}\r\n","//ActionTypes\r\nconst UPDATE_MESSAGES_IS_LOADİNG = 'UPDATE_MESSAGES_IS_LOADİNG';\r\n\r\n\r\n//Reducer\r\nexport default function isMessagesLoading(state = true, {type, payload}) {\r\n  switch (type) {\r\n    case UPDATE_MESSAGES_IS_LOADİNG:\r\n      return payload.status;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n//Actions\r\nexport function updateIsMessagesLoading(status) {\r\n  return {\r\n    type: UPDATE_MESSAGES_IS_LOADİNG,\r\n    payload: {\r\n      status,\r\n    },\r\n  };\r\n}\r\n","//ActionTypes\r\nconst UPDATE_IS_FETCHING_MORE = \"UPDATE_IS_FETCHING_MORE\";\r\n\r\n//Reducer\r\nexport default function isFetchingMoreReducer(\r\n  state = false,\r\n  { type, payload }\r\n) {\r\n  switch (type) {\r\n    case UPDATE_IS_FETCHING_MORE:\r\n      return payload.status;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Actions\r\nexport function updateIsFetchingMore(status) {\r\n  return {\r\n    type: UPDATE_IS_FETCHING_MORE,\r\n    payload: {\r\n      status,\r\n    },\r\n  };\r\n}\r\n","import socket from \"../../socket\";\r\nimport { updateIsMessagesLoading } from \"./isMessagesLoadingReducer\";\r\nimport { updateIsFetchingMore } from \"./isFetchingMoreReducer\";\r\n\r\n//ActionTypes\r\nconst SET_MESSAGES = \"SET_MESSAGES\";\r\nconst CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\r\nconst PUSH_MESSAGE = \"PUSH_MESSAGE\";\r\nconst SET_MESSAGE_SEEN = \"SET_MESSAGE_SEEN\";\r\nconst SET_OLD_MESSAGES = \"SET_OLD_MESSAGES\";\r\n\r\n//Reducer\r\nexport default function messagesReducer(state = [], { payload, type }) {\r\n  switch (type) {\r\n    case SET_MESSAGE_SEEN:\r\n      const seenDate = new Date(payload.data);\r\n      return state.map((message) => {\r\n        if (seenDate > new Date(message.sentDate)) {\r\n          message.isSeen = true;\r\n        }\r\n        return message;\r\n      });\r\n    case SET_MESSAGES:\r\n      return payload.data;\r\n    case SET_OLD_MESSAGES:\r\n      return [...payload.messages, ...state];\r\n    case PUSH_MESSAGE:\r\n      return [...state, payload.data];\r\n    case CLEAR_MESSAGES:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Actions\r\nexport function setMessages(data) {\r\n  return {\r\n    type: SET_MESSAGES,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\n\r\nexport function pushMessage(data) {\r\n  return {\r\n    type: PUSH_MESSAGE,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\nexport function setMessageSeen(data) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SET_MESSAGE_SEEN,\r\n      payload: {\r\n        data,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function clearMessages() {\r\n  return (dispatch) => {\r\n    dispatch(updateIsFetchingMore(false));\r\n    dispatch(updateIsMessagesLoading(true));\r\n    dispatch({\r\n      type: CLEAR_MESSAGES,\r\n      payload: {},\r\n    });\r\n  };\r\n}\r\n\r\nexport function getLastMessages(chatId) {\r\n  return (dispatch) => {\r\n    socket.emit(\"getLastMessages\", chatId, function (err, messages) {\r\n      if (!err) {\r\n        dispatch(setMessages(messages));\r\n        dispatch(updateIsMessagesLoading(false));\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function getOldMessages(chatId, date) {\r\n  return (dispatch) => {\r\n    dispatch(updateIsFetchingMore(true));\r\n    socket.emit(\"getOldMessages\", chatId, date, function (err, messages) {\r\n      if (!err) {\r\n        dispatch({\r\n          type: SET_OLD_MESSAGES,\r\n          payload: { messages },\r\n        });\r\n        dispatch(updateIsFetchingMore(false));\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./emojis.module.css\";\r\n\r\nexport default class Emojis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recently: Object.keys(props.recently).sort(\r\n        (a, b) => new Date(props.recently[b]) - new Date(props.recently[a])\r\n      ),\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.isOpen !== this.props.isOpen && !this.props.isOpen) {\r\n      this.setState({\r\n        recently: Object.keys(this.props.recently).sort(\r\n          (a, b) =>\r\n            new Date(this.props.recently[b]) - new Date(this.props.recently[a])\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickHandle(e) {\r\n    if (e.target.localName === \"span\") {\r\n      this.props.onClickHandle(e.target.innerText);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isOpen } = this.props;\r\n    const { recently } = this.state;\r\n    console.log();\r\n\r\n    return (\r\n      <div\r\n        onClick={this.onClickHandle.bind(this)}\r\n        style={{ display: isOpen ? \"block\" : \"none\" }}\r\n        className={classes.emojis}\r\n      >\r\n        <div className={classes.recently}>\r\n          <p>Recenly used</p>\r\n          {recently.map((emoji) => (\r\n            <span\r\n              key={emoji}\r\n              className={classes.emoji}\r\n              role=\"img\"\r\n              aria-labelledby=\"emoji\"\r\n            >\r\n              {emoji}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className={classes.all}>\r\n          <p>All</p>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😀\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😃\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😄\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😁\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😆\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😅\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤣\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😂\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🙂\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🙃\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😉\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😊\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😇\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥰\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😍\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤩\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😘\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😗\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😚\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😙\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😋\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😛\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😜\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤪\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😝\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤑\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤗\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤫\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤔\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤐\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤨\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😐\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😑\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😶\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😏\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😒\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🙄\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😬\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤥\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😌\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😔\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😪\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤤\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😴\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😷\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤒\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤕\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤢\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤮\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤧\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥵\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥶\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥴\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😵\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤯\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤠\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥳\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😎\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤓\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🧐\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😕\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😟\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🙁\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😮\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😯\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😲\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😳\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥺\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😦\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😧\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😨\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😰\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😥\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😢\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😭\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😱\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😖\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😣\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😞\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😓\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😩\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😫\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🥱\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😤\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😡\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😠\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            🤬\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            😈\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            👿\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            💀\r\n          </span>\r\n          <span className={classes.emoji} role=\"img\" aria-labelledby=\"emoji\">\r\n            ☠\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateChatLastDate } from \"../../../../redux/reducers/chatsReducer\";\r\nimport { pushImages } from \"../../../../redux/reducers/imagesReducer\";\r\nimport { pushMessage } from \"../../../../redux/reducers/messagesReducer\";\r\nimport socket from \"../../../../socket\";\r\nimport Emojis from \"./emojies/Emojis\";\r\nimport classes from \"./input-field.module.css\";\r\n\r\nclass InputField extends Component {\r\n  state = {\r\n    emojisIsOpen: false,\r\n    content: \"\",\r\n    recently: JSON.parse(localStorage.getItem(\"recently\")) || {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", () =>\r\n      localStorage.setItem(\"recently\", JSON.stringify(this.state.recently))\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.chatId !== this.props.chatId) {\r\n      this.setState({\r\n        emojisIsOpen: false,\r\n        content: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  openFileDialog() {\r\n    document.getElementById(\"imageInput\").click();\r\n  }\r\n\r\n  selectImages(e) {\r\n    const images = Array.from(e.target.files).map((file) =>\r\n      window.URL.createObjectURL(file)\r\n    );\r\n    this.props.onPushImages(images);\r\n    e.target.value = null;\r\n  }\r\n\r\n  onChangeHandle(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  toggleEmojiContainer() {\r\n    this.setState({\r\n      emojisIsOpen: !this.state.emojisIsOpen,\r\n    });\r\n  }\r\n\r\n  addEmojiToMessage(emoji) {\r\n    this.setState({\r\n      content: `${this.state.content}${emoji}`,\r\n    });\r\n    this.setState((prevState) => ({\r\n      recently: {\r\n        ...prevState.recently,\r\n        [emoji]: Date.now(),\r\n      },\r\n    }));\r\n  }\r\n  componentWillUnmount() {\r\n    localStorage.setItem(\"recently\", JSON.stringify(this.state.recently));\r\n  }\r\n\r\n  sendMessage(e) {\r\n    const { onPushMessage, onUpdateChatLastDate } = this.props;\r\n    this.setState({\r\n      emojisIsOpen: false,\r\n      content: \"\",\r\n    });\r\n    const { content } = this.state;\r\n    if (content.trim() !== \"\") {\r\n      const { chatId } = this.props;\r\n      const messageData = {\r\n        chatId,\r\n        message: {\r\n          type: 0,\r\n          content,\r\n        },\r\n      };\r\n      socket.emit(\"sendMessage\", messageData, function (err, message) {\r\n        if (!err) {\r\n          onPushMessage(message);\r\n          onUpdateChatLastDate(message.chatId, message.sentDate);\r\n        }\r\n      });\r\n      document.querySelector(\"#content\").focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { content, recently } = this.state;\r\n    return (\r\n      <div className={classes[\"input-field\"]}>\r\n        <button\r\n          onClick={this.openFileDialog.bind(this)}\r\n          className={classes[\"image-button\"]}\r\n        >\r\n          <i className=\"far fa-image\"></i>\r\n        </button>\r\n        <input\r\n          id=\"imageInput\"\r\n          onChange={this.selectImages.bind(this)}\r\n          onFocus={() => this.props.scrollToBottom()}\r\n          style={{ display: \"none\" }}\r\n          type=\"file\"\r\n          accept=\"image/x-png,image/gif,image/jpeg\"\r\n          multiple\r\n        />\r\n        <textarea\r\n          id=\"content\"\r\n          name=\"content\"\r\n          value={content}\r\n          onChange={this.onChangeHandle.bind(this)}\r\n          className={classes.input}\r\n          placeholder=\"Text here\"\r\n          type=\"text\"\r\n        />\r\n        <button\r\n          onClick={this.toggleEmojiContainer.bind(this)}\r\n          className={classes[\"emoji-button\"]}\r\n        >\r\n          <i className=\"far fa-laugh\"></i>\r\n        </button>\r\n        <Emojis\r\n          recently={recently}\r\n          isOpen={this.state.emojisIsOpen}\r\n          onClickHandle={this.addEmojiToMessage.bind(this)}\r\n        />\r\n        <button\r\n          onClick={this.sendMessage.bind(this)}\r\n          className={classes[\"send-button\"]}\r\n        >\r\n          <i className=\"far fa-paper-plane\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPushMessage: (message) => dispatch(pushMessage(message)),\r\n    onPushImages: (images) => dispatch(pushImages(images)),\r\n    onUpdateChatLastDate: (chatId, date) =>\r\n      dispatch(updateChatLastDate(chatId, date)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(InputField);\r\n","export default {\r\n    apiDomain: \"http://localhost:3001/api/v1\"\r\n    // apiDomain: \"http://192.168.1.5:3001/api/v1\"\r\n}","import React, { Component } from \"react\";\r\nimport classes from \"./profile.module.css\";\r\nimport config from \"../../../config\";\r\n\r\nexport default class Profile extends Component {\r\n  componentDidMount() {\r\n    //will connect socket\r\n  }\r\n\r\n  render() {\r\n    const { toggleProfile, isOpen, user } = this.props;\r\n    return (\r\n      <div\r\n        style={{ display: isOpen ? \"block\" : \"none\" }}\r\n        className={classes.background}\r\n      >\r\n        <div className={classes[\"profile-container\"]}>\r\n          <span onClick={null} className={classes[\"close-icon\"]}>\r\n            <i className=\"fas fa-times\" onClick={() => toggleProfile()}></i>\r\n          </span>\r\n          <div className={classes[\"user-image-container\"]}>\r\n            <img className={classes[\"user-image\"]} src={`${config.apiDomain}/profileimages/${user.profileImage}`} alt=\"\" />\r\n          </div>\r\n          <hr className={classes[\"hr\"]} />\r\n          <div className={classes[\"info-container\"]}>\r\n            <div className={classes.info}>\r\n              <i className=\"fas fa-user\"></i>\r\n            </div>\r\n            <div className={classes[\"fullname\"]}>{user.fullName}</div>\r\n          </div>\r\n          <hr className={classes[\"hr\"]} />\r\n          <div className={classes[\"info-container\"]}>\r\n            <div className={classes.info}>\r\n              <i className=\"fas fa-pen\"></i>\r\n            </div>\r\n            <p className={classes[\"description\"]}>{user.description ? user.description : \"No context\"}</p>\r\n          </div>\r\n          <hr className={classes[\"hr\"]} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./text-message.module.css\";\r\nimport socket from \"../../../../socket\";\r\n\r\nexport default class TextMessage extends Component {\r\n  state = {\r\n    message:{}\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n    return {message: nextProps.message}\r\n  }\r\n\r\n  delete = (message, e) => {\r\n    e.preventDefault();\r\n    if (\r\n      window.confirm(` Are you sure to delete \"${message.content}\" message`)\r\n    ) {\r\n      socket.emit(\"deleteMessage\", message._id,  (err, status) => {\r\n        if(status){\r\n          let m = this.state.message;\r\n          m.content = \"[message deleted]\"\r\n          if( status) this.setState({message:m})\r\n        }\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const { isLeft } = this.props;\r\n    const { message } = this.state;\r\n    return (\r\n      <div\r\n        onContextMenu={!isLeft ? this.delete.bind(this, message) : null}\r\n        className={`${classes[\"message\"]} ${\r\n          isLeft ? classes[\"message-left\"] : classes[\"message-right\"]\r\n        }`}\r\n      >\r\n        <span className={classes.content}>\r\n          {message.content}\r\n          <br />\r\n          <div className={classes.info}>\r\n            <span className={classes.seenIcon}>\r\n              {!isLeft && message.isSeen ? (\r\n                <>\r\n                  {\" \"}\r\n                  <i className=\"fas fa-eye\"></i>{\" \"}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </span>\r\n            <span className={classes.time}>\r\n              {new Date(Date.parse(message.sentDate))\r\n                .toLocaleString()\r\n                .slice(11, 16)}\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./image-container.module.css\";\r\nimport {\r\n  clearImages,\r\n  pushImages,\r\n  removeImage,\r\n} from \"../../../../../redux/reducers/imagesReducer\";\r\nimport { pushMessage } from \"../../../../../redux/reducers/messagesReducer\";\r\nimport { updateChatLastDate } from \"../../../../../redux/reducers/chatsReducer\";\r\nimport socket from \"../../../../../socket\";\r\n\r\n\r\nclass ImageContainer extends Component {\r\n  state = {\r\n    title: \"\",\r\n    newImages: [],\r\n  };\r\n\r\n  onChangeHandle(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  close(e) {\r\n    if (e.target.id === \"background\") {\r\n      e.target.style.display = \"none\";\r\n      this.props.onClearImages();\r\n      this.setState({\r\n        title: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  openNewImageInput(e) {\r\n    document.getElementById(\"addImageInput\").click();\r\n  }\r\n\r\n  addNewImages(e) {\r\n    const newImages = Array.from(e.target.files).map((file) =>\r\n      window.URL.createObjectURL(file)\r\n    );\r\n    this.props.onPushImages(newImages);\r\n  }\r\n\r\n  removeImage(index, e) {\r\n    this.props.onRemoveImage(index);\r\n  }\r\n\r\n  async sendImages() {\r\n    const { title } = this.state;\r\n    const { chatId, onPushMessage, onUpdateChatLastDate } = this.props;\r\n    let images = [];\r\n    await Promise.all(\r\n      this.props.images.map(async (imageLink) => {\r\n        await fetch(imageLink)\r\n          .then((res) => res.blob())\r\n          .then((blob) =>\r\n            images.push({ image: blob, type: blob.type.replace(\"image/\", \"\") })\r\n          )\r\n          .catch((err) => console.log(err));\r\n      })\r\n    );\r\n    socket.emit(\"sendImageMessage\", chatId, { title, images }, function (err, message) {\r\n      if (!err) {\r\n        onPushMessage(message);\r\n        onUpdateChatLastDate(chatId, message.sentDate)\r\n      }\r\n    });\r\n\r\n    \r\n    this.props.onClearImages();\r\n    this.setState({\r\n      title: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n    const { newImages } = this.state;\r\n    return (\r\n      <div\r\n        style={{ display: images.length ? \"block\" : \"none\" }}\r\n        id=\"background\"\r\n        onClick={this.close.bind(this)}\r\n        className={classes[\"background\"]}\r\n      >\r\n        <div className={classes[\"container\"]}>\r\n          <div className={classes[\"images\"]}>\r\n            {images.map((image, index) => {\r\n              return (\r\n                <div\r\n                  id={index}\r\n                  key={index}\r\n                  className={classes[\"image-container\"]}\r\n                >\r\n                  <img src={image} alt=\"\" />\r\n                  <div\r\n                    onClick={this.removeImage.bind(this, index)}\r\n                    className={classes[\"delete-container\"]}\r\n                  >\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div\r\n              onClick={this.openNewImageInput.bind(this)}\r\n              className={classes[\"new-image-container\"]}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n            </div>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              value={newImages}\r\n              onChange={this.addNewImages.bind(this)}\r\n              id=\"addImageInput\"\r\n              accept=\"image/x-png,image/gif,image/jpeg\"\r\n              multiple\r\n            />\r\n          </div>\r\n          <div className={classes[\"send-image-container\"]}>\r\n            <input\r\n              name=\"title\"\r\n              value={this.state.title}\r\n              onChange={this.onChangeHandle.bind(this)}\r\n              className={classes[\"title\"]}\r\n              autoFocus\r\n              type=\"text\"\r\n              placeholder=\"Text here\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <button\r\n              onClick={this.sendImages.bind(this)}\r\n              className={classes[\"send-images-button\"]}\r\n            >\r\n              <i className=\"far fa-paper-plane\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return { images: state.images };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClearImages: () => dispatch(clearImages()),\r\n    onRemoveImage: (index) => dispatch(removeImage(index)),\r\n    onPushImages: (images) => dispatch(pushImages(images)),\r\n    onPushMessage: (message) => dispatch(pushMessage(message)),\r\n    onUpdateChatLastDate: (chatId, date) => dispatch(updateChatLastDate(chatId, date)),\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageContainer);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./image-message.module.css\";\r\nimport config from \"../../../../config\";\r\nimport socket from '../../../../socket'\r\n\r\nexport default class ImageMessage extends Component {\r\n  state = {\r\n    message:{}\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n    return {message: nextProps.message}\r\n  }\r\n\r\n  delete = (message, e) => {\r\n    e.preventDefault();\r\n    if (\r\n      window.confirm(` Are you sure to delete \"${message.content.title}\" message`)\r\n    ) {\r\n      socket.emit(\"deleteMessage\", message._id,  (err, status) => {\r\n        if(status){\r\n          let m = this.state.message;\r\n          m.content.title = \"[message deleted]\"\r\n          m.content.images = []\r\n\r\n          if( status) this.setState({message:m})\r\n        }\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  openImage(e) {\r\n    if (e.target.localName === \"img\") {\r\n      console.log('dd')\r\n      window.open(e.target.src, \"_blank\");\r\n      return\r\n    }\r\n    window.open(e.target.children[0].src, \"_blank\");\r\n   \r\n  }\r\n\r\n  render() {\r\n    const { isLeft, message } = this.props;\r\n    return (\r\n      <div\r\n      onContextMenu={!isLeft ? this.delete.bind(this, message) : null}\r\n        className={`${classes[\"image-message\"]} ${\r\n          isLeft\r\n            ? classes[\"image-message-left\"]\r\n            : classes[\"image-message-right\"]\r\n        }`}\r\n      >\r\n        <div className={classes.images}>\r\n          <p className={classes[\"title\"]}>{message.content.title}</p>\r\n          {message.content.images.length > 1\r\n            ? message.content.images.map((image) => (\r\n                <div onClick={this.openImage.bind(this)} key={image} className={classes[\"small-image-container\"]}>\r\n                  <img\r\n                    className={classes[\"small-image\"]}\r\n                    src={`${\r\n                      config.apiDomain\r\n                    }/messages/getimage/${image}?token=${JSON.parse(\r\n                      localStorage.getItem(\"token\")\r\n                    )}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              ))\r\n            : message.content.images.map((image) => (\r\n                <div onClick={this.openImage.bind(this)} key={image} className={classes[\"image-container\"]}>\r\n                  <img\r\n                    className={classes[\"image\"]}\r\n                    src={`${\r\n                      config.apiDomain\r\n                    }/messages/getimage/${image}?token=${JSON.parse(\r\n                      localStorage.getItem(\"token\")\r\n                    )}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          <div className={classes[\"info\"]}>\r\n            <span className={classes.seenIcon}>\r\n              {!isLeft && message.isSeen ? <i className=\"fas fa-eye\"></i> : \"\"}\r\n            </span>\r\n            <span className={classes.time}>\r\n              {new Date(Date.parse(message.sentDate))\r\n                .toLocaleString()\r\n                .slice(11, 16)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport classes from \"./style.module.css\";\r\n\r\nexport default function LoadingSpinner({status}) {\r\n    const spinner = useRef(null);\r\n    if(!status && spinner.current) {\r\n        spinner.current.style.opacity = 0;\r\n        setTimeout(() => {\r\n           if(spinner.current){\r\n            spinner.current.style.display=\"none\";\r\n           }\r\n        }, 300);\r\n    }\r\n    else if(spinner.current){\r\n        spinner.current.style.opacity= 1;\r\n        setTimeout(() => {\r\n            if(spinner.current){\r\n              spinner.current.style.display=\"block\";\r\n            }\r\n        }, 300);\r\n    }\r\n  return (\r\n    <div ref={spinner}  className={classes[\"spinner-wrapper\"]}>\r\n      <div className={classes[\"spinner\"]}>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./style.module.css\";\r\n\r\nfunction FetchingSpinner(props) {\r\n  return (\r\n    <div\r\n      style={{ display: props.isFetchingMore ? \"block\" : \"none\" }}\r\n      className={classes[\"fetching-spinner-wrapper\"]}\r\n    >\r\n      <i className=\"fas fa-spinner fa-2x\"></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    isFetchingMore: state.isFetchingMore,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(FetchingSpinner);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./message-board.module.css\";\r\nimport InputField from \"./inputfield/InputField\";\r\nimport Profile from \"../profile/Profile\";\r\nimport {\r\n  getLastMessages,\r\n  getOldMessages,\r\n  clearMessages,\r\n  setMessageSeen,\r\n} from \"../../../redux/reducers/messagesReducer\";\r\nimport config from \"../../../config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextMessage from \"./textmessage/TextMessage\";\r\nimport { resetUnread } from \"../../../redux/reducers/unreadsReducer\";\r\nimport ImageContainer from \"./inputfield/Images/ImageContainer\";\r\nimport ImageMessage from \"./imagemessage/ImageMessage\";\r\nimport { clearImages } from \"../../../redux/reducers/imagesReducer\";\r\nimport socket from \"../../../socket\";\r\nimport LoadingSpinner from \"../../common/LaodingSpinner/LoadingSpinner\";\r\nimport FetchingSpinner from \"../../common/FetchingSpinner/FetchingSpinner\";\r\n\r\nclass MessageBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.messageboard = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    isOnline: false,\r\n    profileIsOpen: false,\r\n    isFetching: false,\r\n    canFetchMore: true,\r\n    oldScrollheight: 0,\r\n    chatId: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.messageboard.current.addEventListener(\"scroll\", async (e) => {\r\n      if (\r\n        e.target.scrollTop <= 50 &&\r\n        !this.state.isFetching &&\r\n        this.state.canFetchMore &&\r\n        this.props.messages.length > 0\r\n      ) {\r\n        await this.setState({\r\n          isFetching: true,\r\n          oldScrollheight: e.target.scrollHeight,\r\n        });\r\n        console.log(this.props.match.params.chatId);\r\n        await this.props.onGetOldMessages(\r\n          this.props.match.params.chatId,\r\n          this.props.messages[0].sentDate\r\n        );\r\n      }\r\n    });\r\n    socket.on(\"setSeen\", (chatId, date) => {\r\n      if (this.props.match.params.chatId === chatId)\r\n        this.props.onSetMessageSeen(date);\r\n    });\r\n\r\n    const { chatId } = this.props.match.params;\r\n    const sendLastSeenDate = (date) => {\r\n      socket.emit(\"setLastSeen\", chatId, date, function (err, status) {\r\n        if (err) {\r\n          setTimeout(() => {\r\n            sendLastSeenDate(Date.now());\r\n          }, 1000);\r\n        }\r\n      });\r\n    };\r\n    await this.props.onGetLastMessages(chatId);\r\n    this.props.onResetUnread(chatId);\r\n    sendLastSeenDate(Date.now());\r\n    socket.on(\"isOnline\", (status) => {\r\n      this.setState({ isOnline: status });\r\n    });\r\n    socket.emit(\"connectUserStatus\", chatId, (err, status) => {\r\n      this.setState({ isOnline: status });\r\n    });\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextState.isFetching !== this.state.isFetching) return false;\r\n    if (nextState.canFetchMore !== this.state.canFetchMore) return false;\r\n    return true;\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if (!this.state.isFetching) {\r\n      this.scrollToBottom();\r\n    } else {\r\n      this.messageboard.current.scrollTop =\r\n        this.messageboard.current.scrollHeight - this.state.oldScrollheight;\r\n      if (\r\n        prevProps.messages.length + 20 > this.props.messages.length &&\r\n        prevProps.messages.length !== 0\r\n      ) {\r\n        this.setState({ canFetchMore: false });\r\n      }\r\n      this.setState({ isFetching: false });\r\n    }\r\n    if (prevProps.match.params.chatId !== this.props.match.params.chatId) {\r\n      await this.props.onClearMessages();\r\n      await this.props.onClearImages();\r\n      this.setState({ profileIsOpen: false });\r\n      this.setState({ isFetching: false, canFetchMore: true });\r\n      socket.emit(\"disConnectUserStatus\", prevProps.match.params.chatId);\r\n      socket.emit(\r\n        \"connectUserStatus\",\r\n        this.props.match.params.chatId,\r\n        (err, status) => {\r\n          this.setState({ isOnline: status });\r\n        }\r\n      );\r\n      const { chatId } = this.props.match.params;\r\n      const sendLastSeenDate = (date) => {\r\n        socket.emit(\"setLastSeen\", chatId, date, function (err, status) {\r\n          if (err) {\r\n            setTimeout(() => {\r\n              sendLastSeenDate(Date.now());\r\n            }, 1000);\r\n          }\r\n        });\r\n      };\r\n      await this.props.onGetLastMessages(chatId);\r\n      this.setState({ isFetching: false });\r\n      this.props.onResetUnread(chatId);\r\n      sendLastSeenDate(Date.now());\r\n    }\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    await this.props.onClearMessages();\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({});\r\n  };\r\n\r\n  toggleProfile(e) {\r\n    this.setState({\r\n      profileIsOpen: !this.state.profileIsOpen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let lastDate = undefined;\r\n    const { chatId } = this.props.match.params;\r\n    const { profileIsOpen, isOnline } = this.state;\r\n    const { chats, messages, isMessagesLoading } = this.props;\r\n    const userData = chats.filter((chat) => chat._id === chatId)[0];\r\n    return (\r\n      <main className={classes.main}>\r\n        <div ref={this.messageboard} className={classes[\"message-board\"]}>\r\n          <LoadingSpinner status={isMessagesLoading} />\r\n          <div className={classes[\"message-board-header\"]}>\r\n            {userData ? (\r\n              <>\r\n                <img\r\n                  src={`${config.apiDomain}/profileimages/${userData.user.profileImage}`}\r\n                  alt=\"\"\r\n                />\r\n                <span\r\n                  onClick={this.toggleProfile.bind(this)}\r\n                  className={classes.username}\r\n                >\r\n                  {userData.user.fullName}\r\n                </span>\r\n                <span className={classes.status}>\r\n                  {isOnline ? \"Online\" : \"Offline\"}\r\n                </span>\r\n                <Link to=\"/chat\">\r\n                  <i className=\"fas fa-times\"></i>\r\n                </Link>\r\n\r\n                <Profile\r\n                  isOpen={profileIsOpen}\r\n                  toggleProfile={this.toggleProfile.bind(this)}\r\n                  user={userData.user}\r\n                />\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div id=\"messageList\" className={classes.messages}>\r\n            <FetchingSpinner />\r\n            {messages.length > 0 ? (\r\n              <div className={classes[\"day-info\"]}>\r\n                <span>\r\n                  {`${new Date(messages[0].sentDate).getDate()}  ${new Date(\r\n                    messages[0].sentDate\r\n                  ).toLocaleString(\"default\", { month: \"long\" })}`}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            {messages.map((message) => {\r\n              let isLeft = false;\r\n              let newDay = false;\r\n              if (userData) {\r\n                isLeft = message.senderId === userData.user._id ? true : false;\r\n              }\r\n              const date = new Date(message.sentDate);\r\n              if (lastDate) {\r\n                if (\r\n                  lastDate.getYear() !== date.getYear() ||\r\n                  lastDate.getMonth() !== date.getMonth() ||\r\n                  lastDate.getDay() !== date.getDay()\r\n                ) {\r\n                  newDay = true;\r\n                }\r\n              }\r\n              lastDate = date;\r\n\r\n              return (\r\n                <React.Fragment key={message._id}>\r\n                  {newDay ? (\r\n                    <div className={classes[\"day-info\"]}>\r\n                      <span>\r\n                        {date.getDate() +\r\n                          \" \" +\r\n                          date.toLocaleString(\"default\", { month: \"long\" })}\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {message.type === 0 ? (\r\n                    <TextMessage message={message} isLeft={isLeft} />\r\n                  ) : message.type === 1 ? (\r\n                    <ImageMessage message={message} isLeft={isLeft} />\r\n                  ) : null}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n            <div\r\n              style={{ float: \"left\", clear: \"both\" }}\r\n              ref={(el) => {\r\n                this.messagesEnd = el;\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <ImageContainer chatId={chatId} />\r\n        <InputField\r\n          scrollToBottom={this.scrollToBottom.bind(this)}\r\n          chatId={chatId}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    chats: state.chats,\r\n    messages: state.messages,\r\n    isMessagesLoading: state.isMessagesLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetMessageSeen: (date) => dispatch(setMessageSeen(date)),\r\n    onClearMessages: () => dispatch(clearMessages()),\r\n    onClearImages: () => dispatch(clearImages()),\r\n    onResetUnread: (chatId) => dispatch(resetUnread(chatId)),\r\n    onGetLastMessages: (chatId) => dispatch(getLastMessages(chatId)),\r\n    onGetOldMessages: (chatId, date) => dispatch(getOldMessages(chatId, date)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoard);\r\n","import socket from \"../../socket\";\r\n\r\n//ActionTypes\r\nconst ADD_UNREAD = \"ADD_UNREAD\";\r\nconst PUSH_UNREAD = \"PUSH_UNREAD\";\r\nconst RESET_UNREAD = \"RESET_UNREAD\";\r\n\r\n//Reducer\r\nexport default function unreadsReducer(state = {}, { payload, type }) {\r\n  switch (type) {\r\n    case ADD_UNREAD:\r\n      return { ...state, [payload.chatId]: payload.unRead };\r\n    case PUSH_UNREAD:\r\n      state[payload.chatId] += 1;\r\n      return { ...state };\r\n    case RESET_UNREAD:\r\n      state[payload.chatId] = 0;\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Actions\r\nexport function updateUnreads(chatId, unRead) {\r\n  return {\r\n    type: ADD_UNREAD,\r\n    payload: {\r\n      chatId,\r\n      unRead,\r\n    },\r\n  };\r\n}\r\nexport function pushUnread(chatId, unRead) {\r\n  return {\r\n    type: PUSH_UNREAD,\r\n    payload: {\r\n      chatId,\r\n    },\r\n  };\r\n}\r\n\r\nexport function resetUnread(chatId) {\r\n  return {\r\n    type: RESET_UNREAD,\r\n    payload: {\r\n      chatId,\r\n    },\r\n  };\r\n}\r\n\r\nexport function getUnreads(chatId, senderId) {\r\n  return (dispatch) => {\r\n    socket.emit(\"getUnreads\", chatId, senderId, function (err, unRead) {\r\n      dispatch(updateUnreads(chatId, unRead));\r\n    });\r\n  };\r\n}\r\n","import socket from \"../../socket\";\r\n\r\n//ActionTypes\r\nconst UPDATE_NOTIFICATIONS = \"UPDATE_NOTIFICATIONS\";\r\nconst PUSH_NOTIFICATION = \"PUSH_NOTIFICATION\";\r\nconst REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\r\nconst SET_NOTIFICATION_SEEN = \"SET_NOTIFICATION_SEEN\";\r\n\r\n//Reducer\r\nexport default function notificationsReducer(state = [], { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_NOTIFICATIONS:\r\n      return sortNotifications(payload.data);\r\n    case PUSH_NOTIFICATION:\r\n      return [...sortNotifications([...state, payload.data])];\r\n    case SET_NOTIFICATION_SEEN:\r\n      const updated = state.map(nt => {\r\n        nt.isSeen = true\r\n        return nt;\r\n      })\r\n      return [...sortNotifications(updated)];\r\n    case REMOVE_NOTIFICATION:\r\n      const newNotifications = state.filter(notification => notification._id !== payload.data)\r\n      return [...sortNotifications(newNotifications)];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction sortNotifications(notifications){\r\n  return notifications.sort( (a, b) => {\r\n    return new Date(b.sentDate) - new Date(a.sentDate)\r\n  })\r\n}\r\n\r\n//Actions\r\nexport function updateNotifications(data) {\r\n  return {\r\n    type: UPDATE_NOTIFICATIONS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\n\r\nexport function pushNotification(notification) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PUSH_NOTIFICATION,\r\n      payload: {\r\n        data: notification,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function setNotificationSeen(){\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SET_NOTIFICATION_SEEN,\r\n      payload: {\r\n      },\r\n    });\r\n}\r\n}\r\n\r\nexport function removeNotification(notificationId) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: REMOVE_NOTIFICATION,\r\n      payload: {\r\n        data: notificationId\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function getNotifications(userId) {\r\n  return (dispatch) => {\r\n    socket.emit(\"getNotifications\", (err, notifications) => {\r\n      if (!err) {\r\n        dispatch(updateNotifications(notifications));\r\n      }\r\n    });\r\n  };\r\n}\r\n","//ActionTypes\r\nconst UPDATE_SOUND = 'UPDATE_SOUND';\r\n\r\n\r\n//Reducer\r\nexport default function exampleReducer(state = true, {payload, type}) {\r\n  switch (type) {\r\n    case UPDATE_SOUND:\r\n      return payload.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n//Actions\r\nexport function updateSound(data) {\r\n  localStorage.setItem(\"sound\", JSON.stringify(data))\r\n  return {\r\n    type: UPDATE_SOUND,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\n\r\nexport function getSoundIsOpen() {\r\n  return (dispatch) => {\r\n    let sound = JSON.parse(localStorage.getItem(\"sound\"))\r\n    console.log(sound)\r\n    if(sound === null){\r\n      sound = true\r\n      localStorage.setItem(\"sound\", JSON.stringify(true))\r\n    }\r\n    dispatch(updateSound(sound));\r\n  };\r\n}","import jwt from \"jsonwebtoken\";\r\nimport socket from \"../../socket\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser } from \"../../redux/reducers/userReducer\";\r\nimport { pushUnread } from \"../../redux/reducers/unreadsReducer\";\r\nimport {\r\n  getChats,\r\n  updateChatLastDate,\r\n} from \"../../redux/reducers/chatsReducer\";\r\nimport { pushMessage } from \"../../redux/reducers/messagesReducer\";\r\nimport { getNotifications } from \"../../redux/reducers/notificationsReducer\";\r\nimport sound from \"../../helpers/sound/message-sound.ogg\";\r\nimport { getSoundIsOpen } from \"../../redux/reducers/soundReducer\";\r\nvar audio = new Audio(sound);\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    if (this.props.match.params.path) {\r\n      this.props.history.push(\"/chat\");\r\n    }\r\n    let token = JSON.parse(localStorage.getItem(\"token\"));\r\n    if (!token || !jwt.decode(token) || !jwt.decode(token).apiKey) {\r\n      localStorage.removeItem(\"token\");\r\n      window.location.replace(\"/\");\r\n    }\r\n    socket.on(\"connect\", (e) => {\r\n      console.log(e);\r\n      console.log(\"connected\");\r\n    });\r\n\r\n    socket.on(\"connected\", () => {\r\n      this.props.onGetSoundIsOpen();\r\n      this.props.ongetUser();\r\n      this.props.onGetChats();\r\n      this.props.onGetNotifications();\r\n      socket.on(\"newMessage\", (newMessage) => {\r\n        if (this.props.soundIsOpen) {\r\n          audio.pause();\r\n          audio.currentTime = 0;\r\n          audio.play();\r\n        }\r\n        const { onUpdateChatLastDate, onPushMessage, onPushUnred } = this.props;\r\n        if (newMessage.chatId === this.props.match.params.path) {\r\n          onPushMessage(newMessage);\r\n          socket.emit(\r\n            \"setLastSeen\",\r\n            newMessage.chatId,\r\n            Date.now(),\r\n            function (err, status) {}\r\n          );\r\n        } else {\r\n          onPushUnred(newMessage.chatId);\r\n        }\r\n        onUpdateChatLastDate(newMessage.chatId, newMessage.sentDate);\r\n      });\r\n\r\n      socket.on(\"forceQuit\", () => {\r\n        localStorage.setItem(\"isForceQuit\", JSON.stringify(true));\r\n        localStorage.removeItem(\"token\");\r\n        window.location.replace(\"/\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment>{this.props.children}</React.Fragment>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { soundIsOpen: state.sound };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ongetUser: () => dispatch(getUser()),\r\n    onGetChats: () => dispatch(getChats()),\r\n    onGetSoundIsOpen: () => dispatch(getSoundIsOpen()),\r\n    onPushUnred: (chatId) => dispatch(pushUnread(chatId)),\r\n    onGetNotifications: () => dispatch(getNotifications()),\r\n    onPushMessage: (message) => dispatch(pushMessage(message)),\r\n    onUpdateChatLastDate: (chatId, date) =>\r\n      dispatch(updateChatLastDate(chatId, date)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main));\r\n","import socket from \"../../socket\";\r\n\r\n//ActionTypes\r\nconst UPDATE_USER = \"UPDATE_USER\";\r\nconst UPDATE_PROFILE_IMAGE = \"UPDATE_PROFILE_IMAGE\";\r\n\r\n//Reducer\r\nexport default function userReducer(state = {}, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_USER:\r\n      return payload.data;\r\n    case UPDATE_PROFILE_IMAGE:\r\n      return { ...state, profileImage: payload.data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Actions\r\nexport function updateUser(data) {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n}\r\nexport function updateProfileImage(data) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_IMAGE,\r\n      payload: {\r\n        data,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function getUser() {\r\n  return (dispatch) => {\r\n    socket.emit(\"getUserData\", function (err, userData) {\r\n      if (userData) {\r\n        console.log(userData);\r\n        dispatch(updateUser(userData));\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./my-profile.module.css\";\r\nimport config from \"../../../config\";\r\nimport socket from \"../../../socket\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateProfileImage } from \"../../../redux/reducers/userReducer\";\r\n\r\nclass MyProfile extends Component {\r\n  state = {\r\n    description: this.props.user.description\r\n      ? this.props.user.description.toString()\r\n      : \"\",\r\n    isDescriptionEdit: false,\r\n      newImage: undefined\r\n  };\r\n\r\n  closeMyProfile(e) {\r\n    if (e.target.id === \"background\") {\r\n      this.props.toggleMyProfile();\r\n    }\r\n  }\r\n\r\n  editDescription(e) {\r\n    this.setState({\r\n      isDescriptionEdit: true,\r\n    });\r\n  }\r\n\r\n  saveDescription(e) {\r\n    //send server\r\n    socket.emit('changeDescription', this.state.description, (err, status) => {\r\n      if(!err){\r\n        this.setState({\r\n          isDescriptionEdit: false\r\n        })\r\n        console.log(this.state.description);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeHandle(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  openFileDialog(e){\r\n    document.querySelector('#image-input').click()\r\n  }\r\n\r\n  onImageInputChange(e) {\r\n    socket.emit('changeProfileImage', {image:e.target.files[0],type: e.target.files[0].type.replace('image/', '')}, (err, profileImage) => {\r\n      if(!err) {\r\n        console.log(profileImage)\r\n        this.props.onUpdateProfileImage(profileImage)\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { toggleMyProfile, isOpen, user } = this.props;\r\n    const { description, isDescriptionEdit } = this.state;\r\n\r\n    return (\r\n      <div\r\n        id=\"background\"\r\n        className={classes.background}\r\n        style={{ display: isOpen ? \"block\" : \"none\" }}\r\n      > \r\n        <div className={classes[\"profile-container\"]}>\r\n          <span\r\n            onClick={() => toggleMyProfile()}\r\n            className={classes[\"close-icon\"]}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          \r\n          <div onClick={this.openFileDialog.bind(this)} className={classes[\"user-image-container\"]}>\r\n          <input onChange={this.onImageInputChange.bind(this)} id=\"image-input\" style={{display: \"none\"}} type=\"file\"/>\r\n            <img\r\n              className={classes[\"user-image\"]}\r\n              src={`${config.apiDomain}/profileimages/${user.profileImage}`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <hr className={classes[\"hr\"]} />\r\n          <div className={classes[\"info-container\"]}>\r\n            <div className={classes.info}>\r\n              <i className=\"fas fa-user\"></i>\r\n            </div>\r\n            <div className={classes[\"fullname\"]}>{user.fullName}</div>\r\n          </div>\r\n          <hr className={classes[\"hr\"]} />\r\n          <div className={classes[\"info-container\"]}>\r\n            <div className={classes.info}>\r\n              <i className=\"fas fa-pen\"></i>\r\n            </div>\r\n            <p className={classes[\"description\"]}>\r\n              <span style={{ display: isDescriptionEdit ? \"none\" : \"block\" }}>\r\n                {description ? description : \"No context\"}\r\n              </span>\r\n              <textarea\r\n                value={description}\r\n                onChange={this.onChangeHandle.bind(this)}\r\n                style={{ display: isDescriptionEdit ? \"block\" : \"none\" }}\r\n                type=\"text\"\r\n                name=\"description\"\r\n                autoComplete=\"off\"\r\n              />\r\n            </p>\r\n            <div className={classes.edit}>\r\n              <i\r\n                style={{ display: isDescriptionEdit ? \"none\" : \"inline-block\" }}\r\n                onClick={this.editDescription.bind(this)}\r\n                className=\"far fa-edit\"\r\n              ></i>\r\n              <i\r\n                onClick={this.saveDescription.bind(this)}\r\n                style={{ display: isDescriptionEdit ? \"inline-block\" : \"none\" }}\r\n                className=\"far fa-check-square\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n          <hr className={classes[\"hr\"]} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state, props) => {\r\n//   return { myProfile: state.myProfile };\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdateProfileImage: (profileImage) => dispatch(updateProfileImage(profileImage)),\r\n\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MyProfile);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./header.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MyProfile from \"../profile/MyProfile\";\r\nimport { connect } from \"react-redux\";\r\nimport config from \"../../../config\";\r\nimport socket from \"../../../socket\";\r\nimport { pushChat } from \"../../../redux/reducers/chatsReducer\";\r\nimport {\r\n  pushNotification,\r\n  removeNotification,\r\n  setNotificationSeen,\r\n} from \"../../../redux/reducers/notificationsReducer\";\r\nimport { updateSound } from \"../../../redux/reducers/soundReducer\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    myProfile: false,\r\n    notificationsIsOpen: false,\r\n    accountMenuIsOpen: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    socket.on(\"newNotification\", (notification) => {\r\n      this.props.onPushNotification(notification);\r\n    });\r\n  }\r\n\r\n  toggleAccountMenu(e) {\r\n    if (!this.state.accountMenuIsOpen) {\r\n      this.setState({\r\n        notificationsIsOpen: false,\r\n      });\r\n    }\r\n    this.setState({\r\n      accountMenuIsOpen: !this.state.accountMenuIsOpen,\r\n    });\r\n  }\r\n\r\n  toggleNotification() {\r\n    if (!this.state.notificationsIsOpen) {\r\n      this.props.onSetNotificationSeen();\r\n      socket.emit(\"setNotificationLastSeen\", Date.now());\r\n      this.setState({\r\n        accountMenuIsOpen: false,\r\n      });\r\n    }\r\n    this.setState({\r\n      notificationsIsOpen: !this.state.notificationsIsOpen,\r\n    });\r\n  }\r\n\r\n  answerRequest(requestId, answer, e) {\r\n    console.log(requestId, answer);\r\n    socket.emit(\"answerRequest\", requestId, answer, (err, chat) => {\r\n      if (!err) {\r\n        if (chat) {\r\n          this.props.onPushChat(chat);\r\n          this.props.onRemoveNotification(requestId);\r\n        } else {\r\n          this.props.onRemoveNotification(requestId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  copyUserId(id, e) {\r\n    var inp = document.createElement(\"input\");\r\n    document.body.appendChild(inp);\r\n    inp.value = id;\r\n    inp.select();\r\n    document.execCommand(\"copy\", false);\r\n    inp.remove();\r\n  }\r\n\r\n  toggleSound(e) {\r\n    this.props.onUpdateSound(!this.props.sound);\r\n  }\r\n\r\n  toggleMyProfile(e) {\r\n    this.setState({\r\n      myProfile: !this.state.myProfile,\r\n      accountMenuIsOpen: false,\r\n    });\r\n  }\r\n\r\n  logOut(e) {\r\n    socket.disconnect();\r\n    localStorage.removeItem(\"token\");\r\n    window.location.replace(\"/\");\r\n  }\r\n\r\n  render() {\r\n    const { user, notifications, sound } = this.props;\r\n    const { notificationsIsOpen, accountMenuIsOpen } = this.state;\r\n    return (\r\n      <header className={classes.header}>\r\n        <Link to=\"/chat\" className={classes.brand}>\r\n          <h1>\r\n            Live Chat <span></span>\r\n          </h1>\r\n        </Link>\r\n        <div className={classes[\"notification-container\"]}>\r\n          <i\r\n            onClick={this.toggleNotification.bind(this)}\r\n            className=\"fas fa-bell\"\r\n          ></i>\r\n          <span\r\n            style={{\r\n              display:\r\n                notifications.filter((nt) => !nt.isSeen).length > 0\r\n                  ? \"flex\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            {notifications.filter((nt) => !nt.isSeen).length}\r\n          </span>\r\n\r\n          <div\r\n            style={{ display: notificationsIsOpen ? \"block\" : \"none\" }}\r\n            className={classes[\"notification-list\"]}\r\n          >\r\n            <h3>Notifications</h3>\r\n            <hr />\r\n            {notifications.map((notification) => {\r\n              if (notification.type === 0) {\r\n                return (\r\n                  <div\r\n                    key={notification._id}\r\n                    className={classes[\"notification\"]}\r\n                  >\r\n                    <img\r\n                      src={`${config.apiDomain}/profileImages/${notification.sender.profileImage}`}\r\n                      alt=\"\"\r\n                    />\r\n                    <span>\r\n                      <b>{notification.sender.fullName}</b> sent friend request\r\n                    </span>\r\n                    <i\r\n                      onClick={this.answerRequest.bind(\r\n                        this,\r\n                        notification._id,\r\n                        true\r\n                      )}\r\n                      className={`${classes[\"accept\"]} fas fa-check`}\r\n                    ></i>\r\n                    <i\r\n                      onClick={this.answerRequest.bind(\r\n                        this,\r\n                        notification._id,\r\n                        false\r\n                      )}\r\n                      className={`${classes[\"reject\"]} fas fa-times`}\r\n                    ></i>\r\n                  </div>\r\n                );\r\n              } else if (notification.type === 1) {\r\n                return (\r\n                  <div\r\n                    key={notification._id}\r\n                    className={classes[\"notification\"]}\r\n                  >\r\n                    <img\r\n                      src={`${config.apiDomain}/profileImages/${notification.reciever.profileImage}`}\r\n                      alt=\"\"\r\n                    />\r\n                    <p>\r\n                      <b>{notification.reciever.fullName}</b>{\" \"}\r\n                      {notification.answer\r\n                        ? \"accepted friend request.\"\r\n                        : \"rejected friend request.\"}\r\n                    </p>\r\n                    <b className={classes[\"time\"]}>{new Date(notification.sentDate).toLocaleDateString()}</b>\r\n                    <b  className={classes[\"date\"]}>{new Date(notification.sentDate).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</b>\r\n                  </div>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </div>\r\n        </div>\r\n        {user.profileImage ? (\r\n          <>\r\n            <div className={classes.account}>\r\n              <img\r\n                onClick={this.toggleAccountMenu.bind(this)}\r\n                className={classes[\"user-image\"]}\r\n                src={`${config.apiDomain}/profileimages/${user.profileImage}`}\r\n                alt=\"\"\r\n              />\r\n              <div\r\n                style={{ display: accountMenuIsOpen ? \"block\" : \"none\" }}\r\n                id=\"account-menu\"\r\n                className={classes[\"account-menu\"]}\r\n              >\r\n                <span className={classes[\"account-info\"]}>\r\n                  <img\r\n                    className={classes[\"user-image\"]}\r\n                    src={`${config.apiDomain}/profileimages/${user.profileImage}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <p className={classes.username}>{user.fullName}</p>\r\n                  <p className={classes.email}>{user.email}</p>\r\n                  <p className={classes[\"user-id\"]} title=\"click to copy\">\r\n                    User Id:\r\n                    <span\r\n                      onClick={this.copyUserId.bind(this, user.shortId)}\r\n                      title=\"Click to copy\"\r\n                    >{`${user.shortId}`}</span>\r\n                  </p>\r\n                  <hr />\r\n                  <div className={classes[\"sound-container\"]}>\r\n                    <span> Message Sound: </span>\r\n                    <label className={classes[\"switch\"]}>\r\n                      <input\r\n                        onClick={this.toggleSound.bind(this)}\r\n                        readOnly\r\n                        checked={sound}\r\n                        type=\"checkbox\"\r\n                      />\r\n                      <span className={classes[\"slider\"]}></span>\r\n                    </label>\r\n                  </div>\r\n                  <div className={classes[\"menu-items\"]}>\r\n                    <span\r\n                      onClick={this.toggleMyProfile.bind(this)}\r\n                      className={classes[\"menu-item\"]}\r\n                    >\r\n                      Profile\r\n                    </span>\r\n                    <span\r\n                      onClick={this.logOut.bind(this)}\r\n                      className={classes[\"menu-item\"]}\r\n                    >\r\n                      Log Out\r\n                    </span>\r\n                  </div>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <MyProfile\r\n              user={user}\r\n              toggleMyProfile={this.toggleMyProfile.bind(this)}\r\n              isOpen={this.state.myProfile}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    user: state.user,\r\n    notifications: state.notifications,\r\n    sound: state.sound,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPushChat: (chat) => dispatch(pushChat(chat)),\r\n    onPushNotification: (notification) =>\r\n      dispatch(pushNotification(notification)),\r\n    onRemoveNotification: (notificationId) =>\r\n      dispatch(removeNotification(notificationId)),\r\n    onSetNotificationSeen: () => dispatch(setNotificationSeen()),\r\n    onUpdateSound: (data) => dispatch(updateSound(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./sidebar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUnreads } from \"../../../redux/reducers/unreadsReducer\";\r\nimport config from \"../../../config\";\r\n\r\nclass ChatListItem extends Component {\r\n  componentDidMount() {\r\n    const { chat } = this.props;\r\n    this.props.onGetUnreads(chat._id, chat.user._id);\r\n  }\r\n\r\n  render() {\r\n    const { chat, unReads } = this.props;\r\n    return (\r\n      <NavLink\r\n      onClick={() => this.props.closeSidebar()}\r\n        className={classes.chat}\r\n        activeClassName={classes[\"active\"]}\r\n        to={`/chat/${chat._id}`}\r\n      >\r\n        <img\r\n          src={`${config.apiDomain}/profileimages/${chat.user.profileImage}`}\r\n          alt=\"\"\r\n        />\r\n        <span className={classes.username}>{chat.user.fullName}</span>\r\n\r\n        <i style={{display: unReads[chat._id] ? \"block\": \"none\"}} className=\"fas fa-comment\">\r\n          <span>{unReads[chat._id]}</span>\r\n        </i>\r\n      </NavLink>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return { unReads: state.unReads };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetUnreads: (chatId, senderId) => dispatch(getUnreads(chatId, senderId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatListItem);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./sidebar.module.css\";\r\nimport ChatListItem from \"./ChatListItem\";\r\nimport { getChats, pushChat } from \"../../../redux/reducers/chatsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"../../../socket\";\r\nimport config from \"../../../config\";\r\nimport LoadingSpinner from '../../common/LaodingSpinner/LoadingSpinner'\r\n\r\nclass Sidebar extends Component {\r\n  state = {\r\n    isMobile: false,\r\n    isOpen: true,\r\n    filter: \"\",\r\n    isAddChatOpen: false,\r\n    searchInput: \"\",\r\n    user: null,\r\n    err: \"\",\r\n    connectionStatus:true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (window.innerWidth < 800) {\r\n      this.setState({ isMobile: true });\r\n    }\r\n    window.addEventListener(\"resize\", (e) => {\r\n      if (window.innerWidth < 800 && !this.state.isMobile) {\r\n        this.setState({ isMobile: true, isAddChatOpen: false });\r\n      } else if (window.innerWidth > 800 && this.state.isMobile) {\r\n        this.setState({ isMobile: false });\r\n      }\r\n    });\r\n    socket.on(\"newChat\", chat => {\r\n      this.props.onpushChat(chat)\r\n    })\r\n    socket.on(\"connect\",() => this.setState({connectionStatus:true}));\r\n    socket.on(\"disconnect\",() => this.setState({connectionStatus:false}));\r\n  }\r\n\r\n  closeSidebar(e) {\r\n    const sidebar = document.querySelector(\"#sidebar\");\r\n    sidebar.style.transform = \"translateX(-300px)\";\r\n    sidebar.style.transform = \"translateX(-300px)\";\r\n    this.setState({\r\n      isOpen: false,\r\n      isAddChatOpen: false,\r\n      searchInput: \"\",\r\n      user: null,\r\n    });\r\n  }\r\n  closeSidebarEvent() {\r\n    this.setState({\r\n      isOpen: false,\r\n      isAddChatOpen: false,\r\n      searchInput: \"\",\r\n      user: null,\r\n    });\r\n  }\r\n\r\n  toggleAddChat(e) {\r\n    this.setState({\r\n      isAddChatOpen: !this.state.isAddChatOpen,\r\n      searchInput: \"\",\r\n      user: null,\r\n      err: \"\"\r\n    });\r\n    return false;\r\n  }\r\n\r\n  search(e) {\r\n    const { searchInput } = this.state;\r\n    this.setState({\r\n      err: \"\",\r\n      user: null,\r\n    });\r\n    if (searchInput.trim() !== \"\") {\r\n      socket.emit(\"searchUser\", searchInput, (err, user) => {\r\n        if (!err) {\r\n          this.setState({\r\n            user,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            err,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addUser(userId, e) {\r\n    console.log(userId);\r\n    socket.emit(\"sendRequest\", userId, (err, status) => {\r\n      if (!err) {\r\n        this.setState({\r\n          user: { ...this.state.user, status },\r\n        });\r\n        console.log(status);\r\n      } else {\r\n        this.setState({\r\n          err,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeHandle(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isMobile,\r\n      isOpen,\r\n      filter,\r\n      isAddChatOpen,\r\n      searchInput,\r\n      user,\r\n      err,\r\n      connectionStatus\r\n    } = this.state;\r\n    const { chats, isChatsLoading } = this.props;\r\n    return (\r\n      <>\r\n        <div\r\n          style={{ display: isMobile && isOpen ? \"block\" : \"none\" }}\r\n          onClick={this.closeSidebar.bind(this)}\r\n          className={classes.background}\r\n        ></div>\r\n        <span className={classes[\"toggle-bar\"]}>\r\n          <i\r\n            style={{ display: isMobile && !isOpen ? \"block\" : \"none\" }}\r\n            onClick={() => this.setState({ isOpen: true })}\r\n            className=\"fas fa-arrow-circle-right\"\r\n          ></i>\r\n        </span>\r\n        <div\r\n          id=\"sidebar\"\r\n          style={{ transform: isMobile && isOpen ? \"translate(0)\" : \"\" }}\r\n          className={classes.sidebar}\r\n        >\r\n          <LoadingSpinner status={isChatsLoading}/>\r\n          <div className={classes[\"sidebar-header\"]}>\r\n            <b>CHATS</b>\r\n            <span onClick={this.toggleAddChat.bind(this)}>\r\n              <i className=\"fas fa-plus\"></i> Add User\r\n            </span>\r\n            <i\r\n              style={{ display: isMobile ? \"block\" : \"none\" }}\r\n              onClick={this.closeSidebar.bind(this)}\r\n              className=\"fas fa-times\"\r\n            ></i>\r\n            <hr />\r\n            <div style={{display: connectionStatus ? \"none\": \"block\"}} className={classes[\"connection-error\"]}><i className=\"fas fa-exclamation-circle\"></i> Connection lost. Trying to reconnect. Please check your network connection.</div>\r\n            <input\r\n              className={classes[\"filter-input\"]}\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              value={filter}\r\n              onChange={this.onChangeHandle.bind(this)}\r\n              placeholder=\"filter by name\"\r\n            />\r\n          </div>\r\n\r\n          <div className={classes[\"chats\"]}>\r\n            {chats\r\n              .filter((chat) =>\r\n                chat.user.fullName\r\n                  .toLowerCase()\r\n                  .includes(filter.toLocaleLowerCase())\r\n              )\r\n              .map((chat) => {\r\n                return (\r\n                  <ChatListItem\r\n                    closeSidebar={this.closeSidebarEvent.bind(this)}\r\n                    key={chat._id}\r\n                    chat={chat}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n          <div\r\n            style={{ display: isAddChatOpen ? \"block\" : \"none\" }}\r\n            className={classes[\"add-chat-container\"]}\r\n          >\r\n            <input\r\n              onChange={this.onChangeHandle.bind(this)}\r\n              className={classes[\"search-user-input\"]}\r\n              type=\"text\"\r\n              name=\"searchInput\"\r\n              value={searchInput}\r\n              placeholder=\"user id\"\r\n            />\r\n            <button\r\n              onClick={this.search.bind(this)}\r\n              className={classes[\"search-user-button\"]}\r\n            >\r\n              Search\r\n            </button>\r\n            <hr />\r\n            {err ? <p className={classes[\"err\"]}>{err}</p> : \"\"}\r\n            {user ? (\r\n              <div className={classes[\"search-result\"]}>\r\n                <img\r\n                  src={`${config.apiDomain}/profileImages/${user.profileImage}`}\r\n                  alt=\"\"\r\n                />\r\n                <span title={user.fullName}>{user.fullName}</span>\r\n                {user.status ? (\r\n                  <i className=\"fas fa-check\"></i>\r\n                ) : (\r\n                  <i\r\n                    onClick={this.addUser.bind(this, user._id)}\r\n                    className=\"fas fa-plus\"\r\n                  ></i>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className={classes[\"add-chat-background\"]}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return { chats: state.chats, isChatsLoading: state.isChatsLoading };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetChats: () => dispatch(getChats()),\r\n    onpushChat: (chat) => dispatch(pushChat(chat)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import React from \"react\";\r\nimport classes from \"./chat-home.module.css\";\r\n\r\nexport default function ChatHome() {\r\n  return (\r\n    <div className={classes[\"chat-home\"]}>\r\n         <h1>Live Chat</h1>\r\n      <i className=\"fas fa-comment\">\r\n      \r\n      </i>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport MessageBoard from \"../components/views/messageboard/MessageBoard\";\r\nimport Main from \"../components/layouts/Main\";\r\nimport Header from \"../components/views/header/Header\";\r\nimport Sidebar from \"../components/views/sidebar/Sidebar\";\r\nimport ChatHome from \"../components/views/chatHome/ChatHome\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/chat/:path?\" /* <----- admin/:path? */>\r\n          <Main>\r\n            <Header />\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path=\"/chat/\" exact render={ChatHome} />\r\n              <Route path=\"/chat/:chatId\" exact component={MessageBoard} />\r\n            </Switch>\r\n          </Main>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../helpers/styles/App.css\";\r\nimport Routers from \"../router/index\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routers />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport example from \"./exampleReducer\";\r\nimport user from \"./userReducer\";\r\nimport chats from \"./chatsReducer\";\r\nimport unReads from \"./unreadsReducer\";\r\nimport messages from \"./messagesReducer\";\r\nimport images from \"./imagesReducer\";\r\nimport notifications from \"./notificationsReducer\";\r\nimport sound from \"./soundReducer\";\r\nimport isMessagesLoading from \"./isMessagesLoadingReducer\";\r\nimport isChatsLoading from \"./isChatsLoadingReducer\";\r\nimport isFetchingMore from \"./isFetchingMoreReducer\";\r\n\r\nexport default combineReducers({\r\n  example,\r\n  user,\r\n  chats,\r\n  unReads,\r\n  messages,\r\n  images,\r\n  notifications,\r\n  sound,\r\n  isMessagesLoading,\r\n  isChatsLoading,\r\n  isFetchingMore,\r\n});\r\n","//ActionTypes\r\nconst UPDATE_EXAMPLE = 'UPDATE_EXAMPLE';\r\n\r\n\r\n//Reducer\r\nexport default function exampleReducer(state = \"\", action) {\r\n  switch (action.type) {\r\n    case UPDATE_EXAMPLE:\r\n      return action.payload.example;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n//Actions\r\nexport function updateExample(example) {\r\n  return {\r\n    type: UPDATE_EXAMPLE,\r\n    payload: {\r\n      example,\r\n    },\r\n  };\r\n}\r\n\r\nexport function getExample(data) {\r\n  return (dispatch) => {\r\n    dispatch(updateExample(data));\r\n  };\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk, logger))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"message-board_main__D-7-S\",\"message-board\":\"message-board_message-board__3YRFP\",\"message-board-header\":\"message-board_message-board-header__3srOH\",\"username\":\"message-board_username__32CKo\",\"status\":\"message-board_status__3qE6w\",\"messages\":\"message-board_messages__1q5TF\",\"day-info\":\"message-board_day-info__-OYlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"text-message_message__3j-Ph\",\"message-left\":\"text-message_message-left__2PEiY\",\"message-right\":\"text-message_message-right__2npr6\",\"info\":\"text-message_info__2lMKd\",\"time\":\"text-message_time__3NA6N\",\"seenIcon\":\"text-message_seenIcon__2sphP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__6gxdO\",\"brand\":\"header_brand__1K8C9\",\"notification-container\":\"header_notification-container__14rKh\",\"notification-list\":\"header_notification-list__3s1cr\",\"notification\":\"header_notification__Uqe7Y\",\"accept\":\"header_accept__1b30Q\",\"reject\":\"header_reject__1YyGO\",\"time\":\"header_time__NGRMa\",\"date\":\"header_date__2Usv0\",\"account\":\"header_account__3vXdw\",\"user-image\":\"header_user-image__3LIcW\",\"account-menu\":\"header_account-menu__3xaog\",\"account-info\":\"header_account-info__27gqC\",\"username\":\"header_username__16FhN\",\"email\":\"header_email__39044\",\"user-id\":\"header_user-id__1po7g\",\"sound-container\":\"header_sound-container__1bze0\",\"menu-items\":\"header_menu-items__17hUJ\",\"menu-item\":\"header_menu-item__QHGg9\",\"switch\":\"header_switch__3HnOO\",\"slider\":\"header_slider__2REA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-field\":\"input-field_input-field__1CMrc\",\"image-button\":\"input-field_image-button__2NbVH\",\"emoji-button\":\"input-field_emoji-button__1bdOL\",\"input\":\"input-field_input__3nT2d\",\"send-button\":\"input-field_send-button__38YWd\"};"],"sourceRoot":""}